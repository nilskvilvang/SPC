[["index.html", "Statistisk prosesskontroll Introduksjon", " Statistisk prosesskontroll Siste endring 15 oktober, 2021 Introduksjon Denne boka gir en introduksjon til statistisk prosesskontroll (SPC) som element i kontinuerlig kvalitetsarbeid. Innholdet er under kontinuerlig utvikling. Tilbakemeldinger og innspill bes gitt til Nils Kvilvang Bilde: Colourbox.com Boka er laget i R Markdown ved hjelp av en rekke programmer og pakker til R, ikke minst bookdown. "],["hvorfor-denne-boka.html", "1 Hvorfor denne boka? 1.1 Programvare", " 1 Hvorfor denne boka? Tanken på å lage denne boka oppsto gjennom forberedelser til innføring av et nytt emne i Kvalitetsledelse på Høgskolen i Innlandet, og gjennom erfaringer fra liknende kurs i helsesektoren rundt om i Kommune-Norge. Kvalitetsarbeid er et sentralt element i svært mange virksomheter. I mange virksomheter, som i helsesektoren, finnes det også lovpålegg som omhandler kvalitet. Det finnes et utall metodikker, tilbydere, bøker og artikler om temaet. Likevel følte vi at akkurat dette kompendiet manglet. Vi savnet en kobling mellom mye av det som blir beskrevet i bøker om kvalitet og kvalitetsledelse, og en grundigere behandling av grunnlaget (= datagrunnlaget) for mye av dette kvalitetsarbeidet. Denne koblingen var fundamental i utviklingen av kvalitetsarbeid gjennom frontfigurer som Walter A. Shewhart og W. Edwards Deming, men har etter vår mening til en viss grad havnet litt i bakleksa. Det grunnleggende premisset bak dette kompendiet og vår tilnærming til kvalitetsarbeid er: Uten en god forståelse av datagrunnlag og analyse av prosesser er sjansene for å lykkes med kvalitetsarbeid små og tilfeldige. I beste fall har man kastet bort ressurser. I verste fall har man kastet bort ressurser, økt frustrasjonen blant ansatte og fått dårligere kvalitet. Derfor mener vi at statistisk prosesskontroll må ha en helt sentral plass i kvalitetsarbeid. Dette kompendiet har til hensikt å drøfte kvalitetsarbeid. Vi mener dette notatet dekker et gap. For det første er det skrevet på norsk. Mye av litteraturen er skrevet på engelsk og kan for mange være vanskelig tilgjengelig av den grunn. Videre er det overraskende lite om statistisk prosesskontroll som verktøy i kvalitetsarbeid, langt mindre på norsk. Der det er et tema, er det i liten grad koblet inn i en større kvalitetssammenheng. Til slutt ønsker vi også å gi leseren en praktisk introduksjon gjennom å vise konkret anvendelse av statistisk prosesskontroll ved å bruke ulike dataverktøy. Til syvende og sist gjelder postulatet «godt gjort er bedre enn godt sagt». Det er vårt klare håp at denne boka kan være både en kilde til forståelse og et praktisk oppslagsverk. 1.1 Programvare Det kan synes unødvendig eller overflødig å vise bruk av flere dataverktøy, men hensikten er å gjøre dette lettere tilgjengelig og mer anvendbart for praktikere som har tilgang til ulike dataverktøy. Excel (Microsoft, 2021) og R (R Core Team, 2021)1 er fritt tilgjengelig (dvs Excel er for så vidt ikke fritt tilgjengelig, men så utbredt at det er naturlig å ta det med2). Det finnes veldig gode tilleggsprogrammer til Excel som integrerer seg sømløst med Excel3 og gjør at arbeidet med statistisk prosesskontroll blir veldig enkelt i et kjent grensesnitt. I forbindelse med arbeidet med denne boka har vi testet ut Analyse-It, SPC for Excel og QIMacros som gir Excel veldig god funksjonalitet4 5.6 Analyse-it kan fremstå som dyrt, men sammenliknet med ekte statistikkprogram er kostnaden relativt lav. Imidlertid finnes det veldig gode alternativer rettet spesielt mot statistisk prosesskontroll og kvalitetsarbeid. De to vi har testet ut er SPC for Excel og QIMacros. Begge integrerer seg sømløst med Excel, har all funksjonalitet man med veldig stor sannsynlighet vil trenge i denne sammenheng og er enkle i bruk. Men alle tilleggene utover standard Excel koster noe. Skal man jobbe en del med statistisk prosesskontroll med Excel som er det imidlertid vel verdt pengene mener vi  og i organisasjoner kan man få volumrabatter o.l. Selv om vi har laget videoer som forklarer framgangsmåte i Excel for flere av analysene og man fint kan lage ulike diagrammer selv, er det uten tvil mer krøkkete. Det er enormt tidsbesparende å ha en plug-in i Excel om man skal jobbe med statistisk prosesskontroll. Om man velger å skaffe seg et av tilleggene til Excel blir et spørsmål om hvor ofte man har behov for å gjøre dette. R (R Core Team, 2021) er en velkjent programvare innenfor statistikk, dataanalyse, datamodellering osv. R har noen store fordeler; det er gratis, det kjører på alle operativsystemer, og det har et svært stort bruker- og utviklermiljø som i all hovedsak deler alt gratis. Det er også enkelt å finne løsninger på det meste gjennom veiledninger og brukerforum på nett. Selve R er et programmeringsspråk og utviklermiljø for statistikk som gir en kjernefunksjonalitet innenfor datahåndtering, kalkulasjoner, dataanalyse, datamodellering, grafisk framstilling av data o.l. Brukerne av R utvikler imidlertid pakker som man bruker i R, det finnes p.t. over 18000 ulike pakker som bygger på kjernen i R. Alle pakkene tilbyr ulike tilrettelagte løsninger  det finnes f.eks. flere pakker som spesifikt handler om statistisk prosesskontroll som qicharts2 og qcc. Den største ulempen med R er at brukergrensesnittet er veldig ulikt hva vi kjenner fra Microsoft Office-typen brukergrensesnitt, så det vil ta litt tid å bli kjent med programmet. I tillegg er brukergrensesnittet kodebasert og ikke menybasert, og kan (dessverre) virke avskrekkende. Likevel, det er et utrolig kraftig verktøy hvis man tar seg tid til å lære seg det grunnleggende. Et spesielt interessant gratis alternativ er statistikkprogrammet jamovi. Dette er en grafisk tiltalende og funksjonsrik statistikkpakke som kjører med R i bakgrunnen (alle analyser i jamovi bruker R), og som også kan inkludere R kode direkte. Det gjør at man kan utnytte alle pakkene skrevet for R direkte i jamovis grafiske brukergrensesnitt. Jamovi er et ypperlig gratis program for statistiske analyser, men har ingen innebygd funksjonalitet ennå for statistisk prosesskontroll (men man kan som sagt kjøre R-pakker for dette i programmet). Et annet ypperlig og gratis program er JASP som også kjører analyser gjennom R i et grafisk brukergrensesnitt, og som har den samme muligheten til direkte R integrasjon som jamovi  foreløpig i betaversjon. JASP er i tillegg i ferd med å utvikle en integrert modul for kvalitetskontroll/statistisk prosesskontroll. Det er forventet lansert i løpet av høsten 2021 og vil kunne bli den absolutt foretrukne plattformen siden den da vil kjøre både avanserte statistikkfunksjoner basert på R og SPC-funksjoner i et intuitivt og flott grensesnitt, og er gratis. Leseren står selvsagt fritt til å hoppe elegant over alle verktøy som ikke er interessante. Det er klare fordeler og ulemper med alle, men forhåpentligvis vil de fleste finne et verktøy de kan bruke i utvalget vi har tatt med. Der det er naturlig, som ved bruk av R og RStudio (Team, 2021), er kodingen inkludert slik at eksempler skal kunne replikeres av leseren, men vi går ikke inn på R utover dette (og en veldig kort introduksjon til hvordan man laster ned og installerer R og RStudio). Kodingen er gjengitt i vedlegg. Vi har brukt R/RStudio og rmarkdown (Allaire et al., 2021)  en såkalt pakke til R  i produksjonen av dette notatet. R baserer seg som sagt på bruk av ulike pakker som er utviklet av forskjellige utviklere og som er fritt tilgjengelig. Mange av disse har også datasett inkludert slik at det er enkelt å replikere eksempler. Så langt det er mulig har vi basert oss på at det vi viser som eksempler skal være replikerbare for leseren. Når det gjelder pakker for statistisk prosess kontroll har vi brukt pakkene qicharts2 (Anhøj, 2021) og qcc (Scrucca et al., 2017). Vi har lite fokus på matematikk og formler i den forstand at vi ikke utleder i dybden forklaring på ulike formler. Vi tror det er fullt mulig å ha en praktisk forståelse og bruk av statistisk prosesskontroll uten å ha dyptgående kjennskap til de matematiske eller statistiske forklaringene  og det har vært vårt kjerneanliggende med denne boka. Likevel har vi inkludert noe bakgrunnskunnskap for å skape en ramme rundt kjernen i notatet der vi tenker det kan være interessant for de som ønsker å fordype seg noe mer. I vedleggene har vi også gjengitt formler og tabeller som kan være interessante. Strengt tatt bruker vi R og RStudio, men dette vil bli forklart i vedlegget som omhandler nedlasting og installasjon av disse. R er programvaren og motoren, RStudio er brukergrensesnittet vi legger utenpå R som gjør det langt enklere å bruke Vi viser til Excel, men man kan like gjerne bruke Apache Open Office, en gratis programvarepakke som inkluderer Calc. Videoene hvor vi viser framgangsmåte i Excel kan enkelt brukes med Calc (selv om mindre forskjeller kan eksistere). Vi er ikke kjent med tilsvarende tilleggsprogram for Open Office Calc. Et annet eksempel på tilsvarende tillegg til Excel er XLSTAT Analyse-It som inkluderer kvalitetsmodulen koster i skrivende stund $ 249 for en årlig lisens, eller $ 649 for en permanent lisens. Om man vil ha et gratis alternativ for statistiske analyser som legger seg i Excel kan også Real Statistics Resource Pack være et ok alternativ, men dette tillegget har ikke noen funksjonalitet for statistisk prosesskontroll "],["hvorfor-er-tid-viktig.html", "2 Hvorfor er tid viktig? 2.1 Hva er utgangspunktet vi skal korrigere fra?", " 2 Hvorfor er tid viktig? La oss anta at et sykehus har en prosess der man har registrert antall avvik gjennom året [^kap_2-1]. I 2019 hadde man 30 avvik i snitt pr måned. Ledelsen mente mot slutten av 2019 at dette var for høyt og bestemte at man skulle innføre en ny prosedyre fra årsskiftet. Ved overgangen til 2021 så man at man gjennom 2020 hadde ca. 24 avvik pr måned i snitt7 8: Download prepost_eksempel_long.xlsx Figure 2.1: Eksempel på prosess over 2 år Når man så nærmere på tallene kunne man også se at variasjonen mellom månedene var blitt mindre: Figure 2.2: Prosess over 2 år - spredning Dette er nok en kjent tilnærming og konklusjon for mange som har jobbet med eller i organisasjoner som gjør tiltak for å heve kvaliteten. Dessverre er det en tilnærming som i beste fall er unøyaktig, men som i verste fall tåkelegger hva som faktisk skjer og som over tid kan gi dårligere kvalitet. Problemet er at man ikke har sett dataene i et tidsperspektiv. Siden man har data for avvik hver eneste måned vil tidsperspektivet kunne gi helt andre innsikter og konklusjoner. Figure 2.3: Prosess over 2 år i et tidsperspektiv I diagrammet over har vi plottet inn hver enkelt måned slik at vi får en blå linje som viser utvikling fra måned til måned. Den oransje horisontale streken angir snittet for året (tilsvarende histogrammet lenger opp). Den røde vertikale streken angir årsskiftet og tidspunktet for endring av rutinen. Rent visuelt vil vi nå ha problemer med å konkludere med at endringen av rutinen var en suksess. Vi vil heller tenke at utviklingen gjennom 2019 var veldig positiv, men at endringen ved årsskiftet 2019-2020 har gjort at trenden nå er klart negativ ift at avvikene øker jevnt og trutt igjen. Så kan man spekulere i at det kanskje er innføring av ny rutine som gjør at man igjen får flere avvik og at på litt lengre sikt vil man ha en positiv effekt. Kanskje, det vil vi ikke se før tallene for 2021 begynner å tikke inn. Men det er grunn til å si at dersom man kunne se denne trenden etter 1.kvartal i 2020 hadde man kanskje vurdert tiltak for å endre trenden (eller i det minste gjort en grundig analyse av rutiner og tiltak). Eksempelet ovenfor er konstruert. Likevel er det grunn til å tro at det ikke er spesielt uvanlig. Mange vil nok kunne kjenne seg igjen i at det jobbes mye med kvalitet i ulike organisasjoner, men at man kanskje ikke har spesielt god kontroll på hva endringer gjør med prosesser, eller at man ikke klarer å fange opp tidsnok at utviklingen går i feil retning. Kanskje har man egentlig lite kontroll på selve prosessen før man starter en endringsprosess? Tidsaspektet er med andre ord et viktig aspekt å ha med seg, og helt essensielt i statistisk prosesskontroll som vi hevder bør ha en sentral plass i kvalitetsarbeid. 2.1 Hva er utgangspunktet vi skal korrigere fra? Det kan kanskje virke selvsagt, men en forbedringsprosess vil ha små og tilfeldige sjanser for å lykkes hvis vi ikke kjenner utgangspunktet. Vi vil påstå at mange slike prosesser likevel starter opp med et noe svakt kjennskap til hva startstedet egentlig er. Kvalitetsarbeid  forbedringsprosesser  startes som regel fordi man har en oppfatning av at det man leverer ikke er like godt som det man mener man kan og bør levere. Men hva er egentlig problemet? Er det treffsikkerheten (treffer vi målet, det vi sikter mot) eller konsistensen (klarer vi å repetere hendelsen gang etter gang), eller begge deler?9 Figure 2.4: Kjenne til utgangspunktet før vi gjør endringer Det er ganske innlysende at vi vil ha langt større sannsynlighet for å lykkes med en forbedringsprosess om vi har kontroll på hva startsituasjonen er. Her kommer statistisk prosesskontroll inn og kan være et viktig verktøy. Med unntak av den nedre høyre illustrasjonen, der både treffsikkerhet og konsistens er bra, viser alle målskivene en variasjon i hvordan treffene er. Variasjon er et essensielt begrep i statistisk prosesskontroll, og forståelse av variasjon vil følgelig være et viktig tema før vi gir oss i kast med selve analysene. Uten forståelse av prosess og variasjon er det fare for at man forsøker å justere en prosess på feil grunnlag, og i verste fall ville vi kommet bedre ut av endringsprosessen ved å ikke gjøre noe som helst. Eksempelet er modifisert fra Carey (2003). Se også Anhøj (2009) og NHS (2009) Hvis du ønsker å bruke R og koden må du laste ned fila og lagre den i samme mappe som din R-fil/ditt R-prosjekt ligger - se forøvrig vedlegg om installasjon av R/RStudio for tips om organisering av filer Illustrasjonen er modifisert fra Montgomery (2020), jfr. Leavengood &amp; Reeb (2015) "],["variasjon.html", "3 Variasjon 3.1 Simulering av trakteksperimentet i R", " 3 Variasjon Vi skal tilnærme oss begrepet variasjon gjennom å vise til et velkjent eksperiment  «The Funnel Experiment», eller trakteksperimentet som vi kan kalle det på norsk. Hensikten med trakteksperimentet var å vise at dersom vi ikke forstår variasjon, og introduserer korrigerende tiltak i prosesser som ikke trenger det, står vi i fare for å forverre resultatet (og ofte ha brukt mye tid og ressurser på å justere prosessen i den tro at resultatet vil bli bedre). Eksperimentet illustrerer at mange tiltak i organisasjoner for å «rette på feil» eller «forbedre kvaliteten» ender opp med å ha motsatt virkning. Trakteksperimentet - oppsett Trakteksperimentet ble popularisert av Deming (1986) for å beskrive de negative effektene prosessendringer kan ha hvis man ikke forstår årsakene til variasjonen i resultatene (Deming krediterer selv Lloyd Nelson for å ha designiet ekseperimentet, og enkelte kilder omtaler derfor dette som the Deming-Nelson funnel experiment (Georgantzas &amp; Orsini, 2003) . I trakteksperimentet lar vi en klinkekule falle gjennom en trakt vi har sentrert rett over et mål. Der kula treffer arket setter vi et merke. Kula vil aldri treffe nøyaktig på målet og aldri nøyaktig på samme sted fra gang til gang. La oss si at vi slipper kula gjennom trakta første gang. Trakta er plassert slik at senterlinja gjennom trakta treffer nøyaktig midt i målet. Så slipper vi kula og registerer treffpunktet. Trakteksperimentet - oppsett Deretter bruker vi 1 av 4 regler for korreksjon for å justere prosessen for å forsøke å få kula til å treffe nærmere målet (se f.eks. (Sparks &amp; Field, 2000). Regel 1 Ingen justering. Selv om kula ikke treffer målet fortsetter vi med neste forsøk uten å gjøre noen justeringer. Vi holder trakta på nøyaktig samme sted. Regel 2 Trakta justeres etter forrige treffpunkt (treff 1). Hvis kula treffer i z avstand fra målets senterpunkt vil trakta justeres med -z før neste forsøk. Trakteksperimentet - treff etter første forsøk Så gjentar vi prosessen og korrigerer trakta fra traktas forrige posisjon etter hvert treffpunkt ut fra kulas avstand fra det nye treffpunktet til målets senterpunkt. Justering av trakta skjer etter følgende metode: Plassering av trakta starter i målsenteret (0,0) og justeres deretter slik at ny plassering blir målsenteret blir minus offset (retning og avstand) for forrige kule fra treffpunkt til målsenteret. Sparks &amp; Field (2000) beskriver regelen slik: At drop i (i = 1,2,3, .) the marble will come to rest at point yi, measured from the target. (In other words, yi is the error at drop i.) Move the funnel the distance -yi from its last position to aim for the next drop. Deming (1986) gir noen eksempler på bruk av regel 2: feedback-mekanismer som reagerer på enkelttilfeller, endring av en policy, rutine e.l. på bakgrunn av (kun) siste kundeundersøkelse, bruke variasjon/avvik til å lage budsjetter og vurdering av en aksje basert på forrige måneds underskudd. Regel 3 Her registrerer vi treff 1 som i regel 2. Vi flytter trakta til et punkt nøyaktig motsatt av det punktet kula fikk. Vi beregner offset for kula på samme måte som i regel 2  retning og avstand fra målsenteret til kulas treffpunkt. Før vi justerer flytter vi imidlertid trakta tilbake til (0,0) og justerer derfra (i motsetning til regel 2 da vi ikke flyttet trakta til (0,0) før vi begynte korreksjonen, men i stedet foretok justeringen fra det punktet trakta befant seg da kula ble sluppet). Her eksemplifiserer Deming (1986) ved å vise til hvordan mer effektiv narkotikabekjempelse fører til høyere priser på narkotika som stimulerer til smugling av mer narkotika, eller en gambler som høyner innsatsen for å dekke forrige tap. Sparks &amp; Field (2000) beskriver regelen slik: At drop i the marble comes to rest at point yi from the target, then for the next drop aim the funnel over the point -yi from the target. Regel 4 Her flytter vi trakta hele tiden til siste treffpunkt og slipper ny kule der. Her viser Deming (1986) til eksempler som den kjente «hviskeleken» der et antall personer sitter i en ring og gjenforteller en historie ved å hviske den til neste person, som igjen hvisker den til neste osv til den kommer til siste person som forteller historien vedkommende nettopp hørte. Historien som til slutt blir fortalt er som regel ganske annerledes enn den opprinnelige. Et annet eksempel kan være produksjon av en gjenstand basert på forrige produserte gjenstands mål. Sparks &amp; Field (2000) beskriver regelen slik: At drop i the marble comes to rest at point yi from the target, then for the next drop aim the funnel over the spot yi where the marble last came to rest. En kort og instruktiv video (Crostic, 2015) om gjennomføringen av trakteksperimentet vises kan dere se her. 3.1 Simulering av trakteksperimentet i R Vi kan kjøre en simulasjon som viser at resultatet blir suksessivt dårligere etter hvert som vi implementerer reglene. Best resultat kommer fra ingen justering. Dernest gir regel 2 nest best resultat, regel 3 nest dårligst, og til slutt regel 4 det dårligste resultatet. Ved en simulering av 100 repetisjoner kan vi grafisk se hvilket resultat vi får gjennom å anvende de fire ulike reglene. For å kjøre R-koden (jfr vedlegg) må du laste ned disse Excel-filene: Download Funnel_blankedata_regel3.xlsxDownload Funnel_blankedata_regel4.xlsx Figure 3.1: Simulering av trakteksperimentet Det vi kan se er at resultatet etter regel 1 og 2 er sentrert rundt målet, men at regel 2 gir større spredning. Simuleringer viser at regel to gir 40-41 % større areal i plottet  eller dobbelt så stor varians (Prevette, 2008; SPC for Excel, 2006).10 Regel 3 vil gi et økende oscillerende mønster. Med en start i nærheten av målet (0,0) vil treffpunktene flytte seg fra side til side stadig lengre vekk fra målet. Mønsteret vil variere, men treffpunktene vil stadig flytte seg lenger unna målet. Hvis vi har et annet førstetreff, vil dette påvirke hvordan mønsteret utvikler seg. For å kjøre R-koden for alternativt førstetreffpunkt må du laste ned denne Excel-fila: Download Funnel_blankedata_regel3_2.xlsx Figure 3.2: Regel 3 - annet førstetreff Regel 4 vil alltid medføre at treffpunktet vil bevege seg lenger og lenger unna målet. Med et annet førstetreff vil mønsteret se annerledes ut. For å kjøre R-koden for alternativt førstetreffpunkt må du laste ned denne Excel-fila: Download Funnel_blankedata_regel4_2.xlsx Figure 3.3: Regel 4 - annet førstetreff Eksperimentet, som altså som regel refereres til som Demings trakteksperiment (Funnel experiment), men refereres også som Nelsons trakteksperiment (se f.eks. Alwan (1991)) illustrerer en viktig erkjennelse i alt kvalitetsarbeid: hvis man ikke vet hva man driver med kan man i beste hensikt fort ende opp med å korrigere en prosess ut i evigheten vekk fra målet. Dessverre er det grunn til å tro at mange forbedringsprosesser ender opp på denne måten. Eksperimentet illustrerer videre en viktig observasjon: alle prosesser har variasjon. Hvis vi tenker over det, vil vi lett finne eksempler fra dagliglivet. Vi sover et antall timer og minutter sammenhengende søvn hver natt som ikke vil være det samme fra natt til natt, men som regel ligge innenfor et visst intervall. Vi har en hvilepuls når vi våkner om morgenen. Måler vi den vil vi se variasjon. Vi kjører til jobben, og tidsbruken vil variere fra dag til dag. Vi tar en treningstur på kvelden. Selv om vi løper samme runde med samme utstyr vil tiden vi bruker variere. Eller strømregningen vi betaler hver måned. Hva med kostnader for en sykehusavdeling? Antall overtidstimer i en organisasjon? Mengde materialer i en bestemt produksjonslinje? Alle de ovennevnte er prosesser som har en variasjon. Variasjon kan være normal eller unormal. Med normal variasjon mener vi variasjon som ikke kan tilskrives en spesiell årsak (ofte omtalt som common cause variation og opprinnelig av Shewhart som assignable cause). Tilsvarende kan unormal variasjon tilskrives en eller flere spesifikke årsaker (special cause variation, av Shewhart benevnt som chance cause). Normal variasjon skyldes fenomen som alltid er til stede i en prosess, og kan dermed ikke endres uten at man endrer selve prosessen. Det betyr også at normal variasjon er det som gjør prosesser forutsigbare i større eller mindre grad. Unormal variasjon på sin side skyldes en (eller flere) ikke-tilfeldige påvirkninger som ikke vanligvis er til stede i prosessen. Dette gjør prosessen uforutsigbar. Problemene oppstår når man ikke skiller mellom de to typene variasjon, og jager etter spesielle årsaker til variasjon når det i realiteten kun er normal variasjon man observerer. Da jager man etter å løse problemer uten å forstå årsakene. La oss se på dataene fra trakteksperimentet igjen, og denne gangen skal vi plotte datapunktene på en måte som gjør at vi ser hvordan treffpunktene varierer ved at vi plotter på en tidsakse (første forsøk til venstre, siste til høyre på x-aksen). Vi kan først se på treffpunkter for x- og y-verdi for hhv regel 1 og 2. Figure 3.4: x- og y-verdier for regel 1 Figure 3.5: x- og y-verdier for regel 2 Det vi kan se er: * Mønstrene likner på hverandre i hvordan de varierer * De varierer like mer eller mindre like mye over og under x = 0 og y = 0. En absolutt perfekt prosess ville gitt null avvik fra 0,0 for hvert forsøk. Dette tyder på at variasjonen er sentrert rundt målpunktet. * Vi kan se at avviket er noe større for regel 2, spesielt på x-verdiene. Dette er iht forventning siden vi vet at variansen er dobbelt så stor for regel 2 som for regel 1. * Vi ser også at gjennomsnittet (markert med horisontal linje) er nærme 0 for både x- og y-verdi for regel 1, mens den er noe mer avvikende for begge verdiene for regel 2. Hvis vi ser på x- og y-verdiene for regel 3 får vi et helt annet bilde. Figure 3.6: x- og y-verdier for regel 3 Vi ser at vi får en økende oscillerende trend. Samtidig ser vi at treffene er sentrert rundt 0, men at treffpunktene i stadig økende grad fjerner seg fra 0. Mønsteret er også veldig likt for x-verdi og y-verdi. Til slutt kan vi se på regel 4. Figure 3.7: x- og y-verdier for regel 4 Det vi kan legge merke til er at begge verdiene starter nærme 0, men at de  som forventet  etter hvert fjerner seg i en trend vekk fra 0. Hadde man kjørt 1000 eller 10000 forsøk ville denne trenden vært enda tydeligere. Dette leder oss til to begrep som er vesentlige i kvalitetsarbeid. Er prosessen kontrollert («in control») eller er den ukontrollert («out of control»)? Prosesser med kun normal variasjon er kontrollerte prosesser, mens prosesser med unormal variasjon er ukontrollerte prosesser. I en kontrollert, stabil prosess er årsakene til variasjon i ytelse/resultater konstant over tid. Dette betyr altså ikke at det ikke er variasjon i ytelse/resultater/kvalitet, at variasjonen er liten eller at kvaliteten er god nok. Under har vi simulert to team som jobber parallelt med å produsere samme produkt, samme maskiner, med samme råmaterialer. Vi skal ikke gå nærmere inn på variasjon o.l., men kan kort konstatere at begge prosessene er i kontroll. Vi kommer tilbake til kontrollgrenser om kort tid, men kort fortalt må alle punkter ligge innenfor kontrollgrensene for at prosessen skal være i kontroll. For å kjøre R-koden må du laste ned følgende fil: Download toteam.xlsx Figure 3.8: To teams kontrolldiagrammer Imidlertid ser vi at Team 1s prosess har større variasjon enn team 2s (selv om de ser like ut må vi ta hensyn til at y-aksene er ulike (legg merke til verdiene 1,2 og 0,4 som viser den øvre kontrollgrensen. Vi ser også at gjennomsnittet ligger på hhv 0.5 og 0.1 for team 1 og 2. Dersom vi arrangerer plottene med samme skala på y-aksen ser vi en klar forskjell mellom de to teamene: Figure 3.9: To teams - like prosesser - ulik variasjon Vi trenger altså ikke være fornøyde med en stabil og kontrollert prosess. Det betyr bare at variasjonen er forutsigbar innenfor statistisk etablerte grenser (Nolan &amp; Provost, 1990), og at ytelsen fra prosessen ikke vil endre seg vesentlig med mindre man endrer selve prosessen.Begge prosessene over er kontrollerte, men det kan virke åpenbart at man vil se nærmere på hvorfor det ene teamet skiller seg veldig fra det andre. Arbeidet med statistisk prosesskontroll handler i hovedsak om dette: Forstå prosessen og forstå variasjonen. Trakteksperimentet viser oss også at korreksjon av prosesser kan lede oss lenger og lenger fra målet om vi ikke forstår variasjon og kontrollerte vs. ukontrollerte prosesser. Deming omtaler dette som «tampering with the process» - tukling med prosessen («If it aint broken, dont fix it»). I jakten på små forbedringer er det fristende å gjøre små justeringer ofte. Det kan være en smart strategi, men det kan også gi motsatt effekt: variasjonen i resultatene blir bare større og større (i takt med desperasjonen etter ønskede forbedringer). Dette vil vi kalle for over-kontrollering av prosesser. Erkjennelsen av variasjon i prosesser og om prosesser i kontrollert eller ukontrollert har klare ledelsesmessige utfordringer og konsekvenser. Nolan &amp; Provost (1990, p. s.3, figur 1) illustrerer to ulike tilnærminger til variasjon: .tabwid table{ border-spacing:0px !important; border-collapse:collapse; line-height:1; margin-left:auto; margin-right:auto; border-width: 0; display: table; margin-top: 1.275em; margin-bottom: 1.275em; border-color: transparent; } .tabwid_left table{ margin-left:0; } .tabwid_right table{ margin-right:0; } .tabwid td { padding: 0; } .tabwid a { text-decoration: none; } .tabwid thead { background-color: transparent; } .tabwid tfoot { background-color: transparent; } .tabwid table tr { background-color: transparent; } .cl-8fd46b00{}.cl-8fb11cae{font-family:'Arial';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-8fb2545c{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-8fb36522{width:247.3pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb36523{width:65.8pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb36524{width:457.4pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb36525{width:65.8pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb36526{width:247.3pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb36527{width:457.4pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb36528{width:65.8pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb36529{width:457.4pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb3652a{width:247.3pt;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb3652b{width:65.8pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb3652c{width:457.4pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb38c14{width:247.3pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb38c15{width:65.8pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb38c16{width:457.4pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8fb38c17{width:247.3pt;background-color:transparent;vertical-align: middle;border-bottom: 2pt solid rgba(102, 102, 102, 1.00);border-top: 2pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;} OmråderVariasjon1Variasjon2Som indikator på god eller dårlig ytelseSom resultat av normal eller unormal variasjonFokusResultat av prosessen (produkt, tjeneste)Årsaker til variasjon i prosessenMålKlassifisere resultat som akseptabelt eller ikkeGi grunnlag for endring av prosessGrunnlagHva kunden ønsker eller trengerHva prosessen faktisk girMetoderMetoder&emsp;Spesifikasjoner, budsjetter, prognoser, numeriske mål, verktøy for å måle ytelseKontrolldiagram En klar svakhet ved den første tilnærmingen  som indikator på god eller dårlig ytelse  er at det tilbyr lite informasjon og grunnlag for forbedring. Likevel, mange vil nok kjenne seg igjen i fokus, mål, grunnlag og metoder i denne tilnærmingen. En kjerne i ledelse i organisasjoner må derfor være å kunne avgjøre om variasjonen fra ulike prosesser er normal eller unormal, og om svingninger indikerer en trend eller en tilfeldig variasjon som følger mønstre vi har sett tidligere. Nolan &amp; Provost (1990) peker på mulige konsekvenser i organisasjoner av å trekke feilslutninger om variasjon: Skylden for problemer legges på ansatte som er utenfor deres kontroll, kostnader til nytt utstyr som ikke er nødvendig, bortkastet tidsbruk for å lete etter forklaringer på en antatt trend når ingenting egentlig har endret seg og gjennomføre tiltak når det ville ha vært bedre å ikke gjøre noe. modifisert fra Nolan &amp; Provost, 1990, s.9, figur 2 Deming (1986) peker på at det store rommet for forbedring (94 %) ligger i endring av prosessen  altså i å jobbe med den normale variasjonen (gitt at prosessen er stabil). Kun 6 % av potensialet ligger i å fikse spesielle ting  unormal variasjon  som skjer. Her ser vi en veldig klar kobling til ledelsesaspektet og ledelsesansvaret som ligger i å realisere potensialet for forbedringer. Matematisk sett vil standardavviket ved å legge til n uavhengige tilfeldige observasjoner øke med kvadratroten av n ganger standardavviket for den individuelle observasjonen. Samlet sett dobles variansen, hvilket gir 1,4 ganger høyere standardavvik (siden standardavvik er kvadratroten av variansen, og \\(\\sqrt{2}\\) \\(\\approx\\) 1.4 "],["r-kode.html", "R kode Kapittel 2 Kapittel 3", " R kode Kapittel 2 Sette opp nødvendige pakker: pacman::p_load(ggplot2, readxl, tidyverse, ggpubr, dplyr, hrbrthemes) Lage fig 2.1: prepost_eksempel_long &lt;- as_tibble(read_excel(&quot;prepost_eksempel_long.xlsx&quot;)) ggbarplot(prepost_eksempel_long, x = &quot;Periode&quot;, y = &quot;Verdi&quot;, add = c(&quot;mean&quot;), color = &quot;blue&quot;, fill = &quot;lightblue&quot;) Lage fig 2.2: ggline(prepost_eksempel_long, x = &quot;Periode&quot;, y = &quot;Verdi&quot;, add = c(&quot;mean_se&quot;, &quot;jitter&quot;)) Lage fig 2.3: t &lt;- 1:24 z &lt;- c(prepost_eksempel_long$Verdi) plot(t,z, type=&quot;l&quot;, col=&quot;blue&quot;, lwd=3, xlab=&quot;Periode&quot;, ylab=&quot;Antall&quot;, xaxt=&quot;n&quot;) axis(1, seq(0,24,2)) abline(v=12, col=&quot;red&quot;, lwd = 3) text(15.5, 40, &quot;Endring i prosedyre&quot;, col = &quot;red&quot;) Kapittel 3 Lage fig 3.1: # Genererer tilfeldig tall for regel 1: pacman::p_load(xlsx, ggplot2, tidyverse, ggpubr) set.seed(91) regel1_x &lt;- as_tibble(rnorm(100, mean = 0, sd = 1)) %&gt;% rename(x = value) %&gt;% add_column(nr = 1:100) %&gt;% relocate(nr) regel1_y &lt;- as_tibble(rnorm(100, mean = 0, sd = 1)) %&gt;% rename(y = value) %&gt;% add_column(nr = 1:100) %&gt;% relocate(nr) regel1 &lt;- merge(regel1_x,regel1_y,by=&quot;nr&quot;) regel1_plot &lt;- ggplot(regel1, aes(x = x, y = y)) + geom_point(size = 1) + labs(x = &quot;x&quot;, y = &quot;y&quot;, title = &quot;Regel 1&quot;) + xlim(-5,5) + ylim(-5,5)+ geom_vline(xintercept = 0, col = &quot;red&quot;) + geom_hline(yintercept = 0, col = &quot;red&quot;) # Genererer tilfeldig tall for regel 2: set.seed(92) regel2_x &lt;- as_tibble(rnorm(100, mean = 0, sd = 2)) %&gt;% rename(x = value) %&gt;% add_column(nr = 1:100) %&gt;% relocate(nr) ## Setter sd = 2 fordi variasjonen med regel 2 er dobbel av regel 1 (jfr SPC for Excel) regel2_y &lt;- as_tibble(rnorm(100, mean = 0, sd = 2)) %&gt;% rename(y = value) %&gt;% add_column(nr = 1:100) %&gt;% relocate(nr) regel2 &lt;- merge(regel2_x,regel2_y,by=&quot;nr&quot;) regel2_plot &lt;- ggplot(regel2, aes(x = x, y = y)) + geom_point(size = 1) + labs(x = &quot;x&quot;, y = &quot;y&quot;, title = &quot;Regel 2&quot;) + xlim(-5,5) + ylim(-5,5) + geom_vline(xintercept = 0, col = &quot;red&quot;) + geom_hline(yintercept = 0, col = &quot;red&quot;) # Henter tall fra Excel for regel 3: regel3 &lt;- read.xlsx(&quot;Funnel_blankedata_regel3.xlsx&quot;, 1) regel3_plot &lt;- ggplot(regel3, aes(x = Regel_3_x, y = Regel_3_y)) + geom_point(size = 1) + labs(x = &quot;x&quot;, y = &quot;y&quot;, title = &quot;Regel 3&quot;) + xlim(-5,5) + ylim(-5,5)+ geom_vline(xintercept = 0, col = &quot;red&quot;) + geom_hline(yintercept = 0, col = &quot;red&quot;) # Henter tall fra Excel for regel 4: regel4 &lt;- read.xlsx(&quot;Funnel_blankedata_regel4.xlsx&quot;, 1) regel4_plot &lt;- ggplot(regel4, aes(x = Regel_4_x, y = Regel_4_y)) + geom_point(size = 1) + labs(x = &quot;x&quot;, y = &quot;y&quot;, title = &quot;Regel 4&quot;) + xlim(-5,5) + ylim(-5,5)+ geom_vline(xintercept = 0, col = &quot;red&quot;) + geom_hline(yintercept = 0, col = &quot;red&quot;) # Setter plottene sammen: ggarrange(regel1_plot, regel2_plot, regel3_plot, regel4_plot + rremove(&quot;x.text&quot;), ncol = 2, nrow = 2) Lage fig 3.2: regel3_2 &lt;- read.xlsx(&quot;Funnel_blankedata_regel3_2.xlsx&quot;, 1) regel3_2_plot &lt;- ggplot(regel3_2, aes(x = x, y = y)) + geom_point(size = 1) + labs(x = &quot;x&quot;, y = &quot;y&quot;, title = &quot;Regel 3 - annet førstetreff&quot;) + xlim(-5,5) + ylim(-5,5)+ geom_vline(xintercept = 0, col = &quot;red&quot;) + geom_hline(yintercept = 0, col = &quot;red&quot;) regel3_2_plot Lage fig 3.3: regel4_2 &lt;- read.xlsx(&quot;Funnel_blankedata_regel4_2.xlsx&quot;, 1) regel4_2_plot &lt;- ggplot(regel4_2, aes(x = x, y = y)) + geom_point(size = 1) + labs(x = &quot;x&quot;, y = &quot;y&quot;, title = &quot;Regel 4 - annet førstetreff&quot;) + xlim(-2,10) + ylim(-10,2)+ geom_vline(xintercept = 0, col = &quot;red&quot;) + geom_hline(yintercept = 0, col = &quot;red&quot;) regel4_2_plot Lage fig 3.4: pacman::p_load(qicharts2) regel1x &lt;- regel1 %&gt;% pull(2) regel1y &lt;- regel1 %&gt;% pull(3) regel1xrun &lt;- qic(regel1x, title = &#39;x-verdi ved regel 1&#39;, ylab = &quot;verdi&quot;, xlab = &quot;Forsøk nr.&quot;) regel1yrun &lt;- qic(regel1y, title = &#39;y-verdi ved regel 1&#39;, ylab = &quot;verdi&quot;, xlab = &quot;Forsøk nr.&quot;) ggarrange(regel1xrun, regel1yrun + rremove(&quot;x.text&quot;), ncol = 2, nrow = 1, widths = c(1, 1)) Lage fig 3.5: pacman::p_load(qicharts2) regel2x &lt;- regel2 %&gt;% pull(2) regel2y &lt;- regel2 %&gt;% pull(3) regel2xrun &lt;- qic(regel2x, title = &#39;x-verdi ved regel 2&#39;, ylab = &quot;verdi&quot;, xlab = &quot;Forsøk nr.&quot;) regel2yrun &lt;- qic(regel2y, title = &#39;y-verdi ved regel 2&#39;, ylab = &quot;verdi&quot;, xlab = &quot;Forsøk nr.&quot;) ggarrange(regel2xrun, regel2yrun + rremove(&quot;x.text&quot;), ncol = 2, nrow = 1, widths = c(1, 1)) Lage fig 3.6: pacman::p_load(qicharts2) regel3x &lt;- regel3 %&gt;% pull(2) regel3y &lt;- regel3 %&gt;% pull(3) regel3xrun &lt;- qic(regel3x, title = &#39;x-verdi ved regel 3&#39;, ylab = &quot;verdi&quot;, xlab = &quot;Forsøk nr.&quot;) regel3yrun &lt;- qic(regel3y, title = &#39;y-verdi ved regel 3&#39;, ylab = &quot;verdi&quot;, xlab = &quot;Forsøk nr.&quot;) ggarrange(regel3xrun, regel3yrun + rremove(&quot;x.text&quot;), ncol = 2, nrow = 1, widths = c(1, 1)) Lage fig 3.7: pacman::p_load(qicharts2) regel4x &lt;- regel4 %&gt;% pull(2) regel4y &lt;- regel4 %&gt;% pull(3) regel4xrun &lt;- qic(regel4x, title = &#39;x-verdi ved regel 4&#39;, ylab = &quot;verdi&quot;, xlab = &quot;Forsøk nr.&quot;) regel4yrun &lt;- qic(regel4y, title = &#39;y-verdi ved regel 4&#39;, ylab = &quot;verdi&quot;, xlab = &quot;Forsøk nr.&quot;) ggarrange(regel4xrun, regel4yrun + rremove(&quot;x.text&quot;), ncol = 2, nrow = 1, widths = c(2, 2)) Lage fig 3.8: pacman::p_load(xlsx, qicharts2, tidyverse, ggplot2, ggpubr) toteam1 &lt;- read.xlsx(&quot;toteam.xlsx&quot;, 1) team1 &lt;- qic(Team.1, data = toteam1, chart = &#39;i&#39;, show.grid = TRUE, title = &quot;Team 1&quot;, ylab = &quot;Antall defekter pr uke&quot;, xlab = &quot;Uke #&quot;) team2 &lt;- qic(Team.2, data = toteam1, chart = &#39;i&#39;, show.grid = TRUE, title = &quot;Team 2&quot;, ylab = &quot;Antall defekter pr uke&quot;, xlab = &quot;Uke #&quot;) ggarrange(team1, team2 + rremove(&quot;x.text&quot;), ncol = 2, nrow = 1, widths = c(1, 1)) Lage fig 3.9: pacman::p_load(xlsx, qicharts2, tidyverse, ggplot2, ggpubr) toteam2 &lt;- readxl::read_excel(&quot;toteam.xlsx&quot;) %&gt;% pivot_longer(c(&quot;Team 1&quot;, &quot;Team 2&quot;)) qic(Nr, value, data = toteam2, facets = ~name, xlab = &quot;Uke #&quot;, ylab = &quot;Antall defekter pr uke&quot;, title = &quot;To team - like prosesser - ulik variasjon&quot;) Allaire, J., Xie, Y., McPherson, J., Luraschi, J., Ushey, K., Atkins, A., Wickham, H., Cheng, J., Chang, W., &amp; Iannone, R. (2021). Rmarkdown: Dynamic documents for r. Alwan, L. C. (1991). Time-series effects and degradation of control chart performance resulting from overadjustment. Total Quality Management, 2(1), 99112. https://doi.org/10.1080/09544129100000009 Anhøj, J. (2009). Statistisk processtyring i sundhedsvæsenet. Ugeskr Læger, 171(21), 17641768. Anhøj, J. (2021). Qicharts2: Quality Improvement Charts. Carey, R. G. (2003). Improving healthcare with control charts. Basic and advanced SPC methods and case studies. ASQ Quality Press. Crostic, M. (2015). The funnel experiment. In YouTube. Deming, W. E. (1986). Out of the crisis. Institute of Technology Center for Advanced Engineering Study. Georgantzas, N. C., &amp; Orsini, J. N. (2003). Tampering dynamics. Proceedings of the 21st International System Dynamics Society Conference. Leavengood, S., &amp; Reeb, J. E. (2015). Statistical process control. Part 2: How and why SPC works. Oregon State University. Microsoft. (2021). Microsoft excel for microsoft 365. Montgomery, D. C. (2020). Introduction to statistical process quality control (Eighth). John Wiley &amp; Sons. NHS. (2009). A guide to creating and interpreting run and control charts. NHS Institute for Innovation and Improvement. Nolan, T. W., &amp; Provost, L. P. (1990). Understanding variation. Quality Progress, May, 210. Prevette, S. S. (2008). Dr. Demings funnel experiment. In Symphony technologies. R Core Team. (2021). R: A language and environment for statistical computing. R Foundation for Statistical Computing. Scrucca, L., Snow, G., &amp; Bloomfield, P. (2017). Qcc: An R package for quality control charting and statistical process control. Sparks, R. S., &amp; Field, J. B. F. (2000). Using Demings Funnel Experiment to Demonstrate Effects of Violating Assumptions Underlying Shewharts Control Charts. The American Statistician, 54(4), 291. https://doi.org/10.2307/2685781 SPC for Excel. (2006). Over-controlling a process: The funnel experiment. Team, R. S. (2021). RStudio: Integrated Development for R. RStudio Inc. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
